version: "3.9"

services:

  jenkins:
    build:
      context: .
      dockerfile: "jenkins.Dockerfile"
    container_name: "${container}"
    env_file: .env
    image: "${image}"
    networks: 
      - net
    ports:
      - "${http_port}:8080/tcp"
      - "${agent_port}:50000/tcp"
    privileged: true
    restart: on-failure
    user: root
    volumes:
      - cert-client:/certs/client:ro
      - data:${JENKINS_HOME}
    working_dir: "${JENKINS_HOME}"

  docker-dind:
    container_name: "dind-agent"
    image: "dind/ssh:3.17"
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    networks: 
      net:
        aliases: 
          - docker
    ports:
      - "2376:2376/tcp"
    privileged: true
    user: root
    volumes:
      - cert-ca:/certs/ca
      - cert-client:/certs/client
      - data:${JENKINS_HOME}

  alpine:
    build:
      args:
        - key=${ssh_key}
        - username=${username}
      context: .
      dockerfile: "alpine.Dockerfile"
    container_name: "alpine-controller"
    image: "alpine/ssh:3.17"
    networks: 
      - net
    volumes:
      - data:${JENKINS_HOME}

  centos:
    build:
      args:
        - key=${ssh_key}
        - username=${username}
      context: .
      dockerfile: "centos.Dockerfile"
    container_name: "centos-agent"
    image: "centos/ssh:7"
    networks: 
      - net
    volumes:
      - data:${JENKINS_HOME}
  debian:
    build:
      args:
        - key=${ssh_key}
        - username=${username}
      context: .
      dockerfile: "debian.Dockerfile"
    container_name: "debian-agent"
    image: "debian/ssh:11"
    networks: 
      - net
    volumes:
      - data:${JENKINS_HOME}

  ubuntu:
    build:
      args:
        - key=${ssh_key}
        - username=${username}
      context: .
      dockerfile: "ubuntu.Dockerfile"
    container_name: "ubuntu-agent"
    image: "ubuntu/ssh:22.04"
    networks: 
      - net
    volumes:
      - data:${JENKINS_HOME}

networks: 
    net:
      driver: bridge

volumes:
  cert-ca:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${certs_ca_dir}"
    name: ${volume_certs_ca}

  cert-client:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${certs_client_dir}"
    name: ${volume_certs_client}

  data:
    driver: local
    driver_opts:
      type: 'none'
      o: 'bind'
      device: "${data_dir}"
    name: ${volume_data}

